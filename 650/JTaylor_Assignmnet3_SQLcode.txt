# SQL Queries Assignmnet 3

#tweets by candidate
#1
SELECT CANDIDATE, Count(CANDIDATE) FROM GOP_SENTIMENT GROUP BY CANDIDATE;

#counts of tweets by each sentiment by candidate
#2
SELECT CANDIDATE, 
SUM(CASE WHEN SENTIMENT='Negative' THEN 1 END) AS Negative,
SUM(CASE WHEN SENTIMENT='Positive' THEN 1 END) AS Positive,
SUM(CASE WHEN SENTIMENT='Neutral' THEN 1 END) AS Neutral,
COUNT(SENTIMENT) AS Total
FROM GOP_SENTIMENT 
GROUP BY CANDIDATE;

#ratio of tweets of each sentiment by candidate
#3
SELECT CANDIDATE, 
(SUM(CASE WHEN SENTIMENT='Negative' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Negative,
(SUM(CASE WHEN SENTIMENT='Positive' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Positive,
(SUM(CASE WHEN SENTIMENT='Neutral' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Neutral,
COUNT(SENTIMENT) AS Total
FROM GOP_SENTIMENT 
GROUP BY CANDIDATE;

#tweet count by subject matter
#4
SELECT SUBJECT_MATTER, COUNT(SUBJECT_MATTER) AS SUBJECT_COUNT
FROM GOP_SENTIMENT 
GROUP BY SUBJECT_MATTER;

#sentiment ratio of tweets by subject matter
#5
SELECT SUBJECT_MATTER, 
(SUM(CASE WHEN SENTIMENT='Negative' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Negative,
(SUM(CASE WHEN SENTIMENT='Positive' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Positive,
(SUM(CASE WHEN SENTIMENT='Neutral' THEN 1 END) / COUNT(SENTIMENT)) AS Perc_Neutral,
COUNT(SENTIMENT) AS Total
FROM GOP_SENTIMENT 
GROUP BY SUBJECT_MATTER;

#average confidence and standard deviation for each candidate
#6
SELECT CANDIDATE,
AVG(CANDIDATE_CONFIDENCE) AS CONFIDENCE_AVG,
STDDEV_SAMP(CANDIDATE_CONFIDENCE) AS CONFIDENCE_STDEV
FROM GOP_SENTIMENT 
GROUP BY CANDIDATE;
